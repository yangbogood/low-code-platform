import React from 'react';
import {
  Card,
  Form,
  Input,
  Select,
  ColorPicker,
  Button,
  Space,
  Divider,
} from 'antd';
import { SaveOutlined, UndoOutlined } from '@ant-design/icons';
import type { ComponentConfig } from '../types';

const { TextArea } = Input;
const { Option } = Select;

interface EmailPropertyPanelProps {
  selectedComponent: ComponentConfig | null;
  onUpdateComponent: (id: string, props: Record<string, any>) => void;
}

export const EmailPropertyPanel: React.FC<EmailPropertyPanelProps> = ({
  selectedComponent,
  onUpdateComponent,
}) => {
  const [form] = Form.useForm();

  React.useEffect(() => {
    if (selectedComponent) {
      form.setFieldsValue(selectedComponent.props);
    }
  }, [selectedComponent, form]);

  const handleSave = (values: any) => {
    if (selectedComponent) {
      onUpdateComponent(selectedComponent.id, values);
    }
  };

  const handleReset = () => {
    if (selectedComponent) {
      form.setFieldsValue(selectedComponent.props);
    }
  };

  if (!selectedComponent) {
    return (
      <Card title="Â±ûÊÄßÈÖçÁΩÆ" style={{ height: '100%' }}>
        <div
          style={{
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            justifyContent: 'center',
            height: '200px',
            color: '#999',
          }}
        >
          <div style={{ fontSize: '48px', marginBottom: '16px' }}>üìß</div>
          <div>ËØ∑ÈÄâÊã©‰∏Ä‰∏™ÈÇÆ‰ª∂ÁªÑ‰ª∂Êù•ÁºñËæëÂ±ûÊÄß</div>
        </div>
      </Card>
    );
  }

  const renderPropertyFields = () => {
    switch (selectedComponent.type) {
      case 'email-header':
        return (
          <>
            <Form.Item label="LogoÂõæÁâá" name="logo">
              <Input placeholder="ËæìÂÖ•LogoÂõæÁâáURL" />
            </Form.Item>
            <Form.Item
              label="ÂÖ¨Âè∏ÂêçÁß∞"
              name="companyName"
              rules={[{ required: true }]}
            >
              <Input placeholder="ËæìÂÖ•ÂÖ¨Âè∏ÂêçÁß∞" />
            </Form.Item>
            <Form.Item label="ÂÖ¨Âè∏Ê†áËØ≠" name="tagline">
              <Input placeholder="ËæìÂÖ•ÂÖ¨Âè∏Ê†áËØ≠" />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
          </>
        );

      case 'email-title':
        return (
          <>
            <Form.Item label="Ê†áÈ¢ò" name="title" rules={[{ required: true }]}>
              <Input placeholder="ËæìÂÖ•ÈÇÆ‰ª∂Ê†áÈ¢ò" />
            </Form.Item>
            <Form.Item label="ÂâØÊ†áÈ¢ò" name="subtitle">
              <Input placeholder="ËæìÂÖ•ÂâØÊ†áÈ¢ò" />
            </Form.Item>
            <Form.Item label="ÂØπÈΩêÊñπÂºè" name="textAlign">
              <Select>
                <Option value="left">Â∑¶ÂØπÈΩê</Option>
                <Option value="center">Â±Ö‰∏≠</Option>
                <Option value="right">Âè≥ÂØπÈΩê</Option>
              </Select>
            </Form.Item>
            <Form.Item label="Â≠ó‰ΩìÂ§ßÂ∞è" name="fontSize">
              <Input placeholder="Â¶Ç: 24px" />
            </Form.Item>
            <Form.Item label="ÊñáÂ≠óÈ¢úËâ≤" name="color">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 30px 20px" />
            </Form.Item>
          </>
        );

      case 'email-content':
        return (
          <>
            <Form.Item label="ÂÜÖÂÆπ" name="content" rules={[{ required: true }]}>
              <TextArea rows={4} placeholder="ËæìÂÖ•ÈÇÆ‰ª∂ÂÜÖÂÆπÔºåÊîØÊåÅHTML" />
            </Form.Item>
            <Form.Item label="ÂØπÈΩêÊñπÂºè" name="textAlign">
              <Select>
                <Option value="left">Â∑¶ÂØπÈΩê</Option>
                <Option value="center">Â±Ö‰∏≠</Option>
                <Option value="right">Âè≥ÂØπÈΩê</Option>
              </Select>
            </Form.Item>
            <Form.Item label="Ë°åÈ´ò" name="lineHeight">
              <Input placeholder="Â¶Ç: 1.6" />
            </Form.Item>
            <Form.Item label="ÊñáÂ≠óÈ¢úËâ≤" name="color">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 30px 20px" />
            </Form.Item>
          </>
        );

      case 'email-button':
        return (
          <>
            <Form.Item
              label="ÊåâÈíÆÊñáÂ≠ó"
              name="text"
              rules={[{ required: true }]}
            >
              <Input placeholder="ËæìÂÖ•ÊåâÈíÆÊñáÂ≠ó" />
            </Form.Item>
            <Form.Item label="ÈìæÊé•Âú∞ÂùÄ" name="url" rules={[{ required: true }]}>
              <Input placeholder="ËæìÂÖ•ÈìæÊé•Âú∞ÂùÄ" />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÊñáÂ≠óÈ¢úËâ≤" name="textColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÂúÜËßí" name="borderRadius">
              <Input placeholder="Â¶Ç: 4px" />
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 12px 24px" />
            </Form.Item>
            <Form.Item label="Â≠ó‰ΩìÂ§ßÂ∞è" name="fontSize">
              <Input placeholder="Â¶Ç: 16px" />
            </Form.Item>
            <Form.Item label="ÂØπÈΩêÊñπÂºè" name="textAlign">
              <Select>
                <Option value="left">Â∑¶ÂØπÈΩê</Option>
                <Option value="center">Â±Ö‰∏≠</Option>
                <Option value="right">Âè≥ÂØπÈΩê</Option>
              </Select>
            </Form.Item>
          </>
        );

      case 'email-image':
        return (
          <>
            <Form.Item label="ÂõæÁâáÂú∞ÂùÄ" name="src" rules={[{ required: true }]}>
              <Input placeholder="ËæìÂÖ•ÂõæÁâáURL" />
            </Form.Item>
            <Form.Item label="Êõø‰ª£ÊñáÊú¨" name="alt">
              <Input placeholder="ËæìÂÖ•ÂõæÁâáÊèèËø∞" />
            </Form.Item>
            <Form.Item label="ÂÆΩÂ∫¶" name="width">
              <Input placeholder="Â¶Ç: 100%" />
            </Form.Item>
            <Form.Item label="ÊúÄÂ§ßÂÆΩÂ∫¶" name="maxWidth">
              <Input placeholder="Â¶Ç: 600px" />
            </Form.Item>
            <Form.Item label="È´òÂ∫¶" name="height">
              <Input placeholder="Â¶Ç: auto" />
            </Form.Item>
            <Form.Item label="ÂØπÈΩêÊñπÂºè" name="textAlign">
              <Select>
                <Option value="left">Â∑¶ÂØπÈΩê</Option>
                <Option value="center">Â±Ö‰∏≠</Option>
                <Option value="right">Âè≥ÂØπÈΩê</Option>
              </Select>
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
          </>
        );

      case 'email-banner':
        return (
          <>
            <Form.Item label="Ê†áÈ¢ò" name="title" rules={[{ required: true }]}>
              <Input placeholder="ËæìÂÖ•Ê®™ÂπÖÊ†áÈ¢ò" />
            </Form.Item>
            <Form.Item label="ÂâØÊ†áÈ¢ò" name="subtitle">
              <Input placeholder="ËæìÂÖ•ÂâØÊ†áÈ¢ò" />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÊñáÂ≠óÈ¢úËâ≤" name="textColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="Â≠ó‰ΩìÂ§ßÂ∞è" name="fontSize">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
            <Form.Item label="ÂØπÈΩêÊñπÂºè" name="textAlign">
              <Select>
                <Option value="left">Â∑¶ÂØπÈΩê</Option>
                <Option value="center">Â±Ö‰∏≠</Option>
                <Option value="right">Âè≥ÂØπÈΩê</Option>
              </Select>
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 40px 20px" />
            </Form.Item>
          </>
        );

      case 'email-product':
        return (
          <>
            <Form.Item
              label="‰∫ßÂìÅÂêçÁß∞"
              name="productName"
              rules={[{ required: true }]}
            >
              <Input placeholder="ËæìÂÖ•‰∫ßÂìÅÂêçÁß∞" />
            </Form.Item>
            <Form.Item label="‰∫ßÂìÅÊèèËø∞" name="productDescription">
              <TextArea rows={3} placeholder="ËæìÂÖ•‰∫ßÂìÅÊèèËø∞" />
            </Form.Item>
            <Form.Item label="‰∫ßÂìÅ‰ª∑Ê†º" name="productPrice">
              <Input placeholder="Â¶Ç: ¬•99.00" />
            </Form.Item>
            <Form.Item label="‰∫ßÂìÅÂõæÁâá" name="productImage">
              <Input placeholder="ËæìÂÖ•‰∫ßÂìÅÂõæÁâáURL" />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ËæπÊ°Ü" name="border">
              <Input placeholder="Â¶Ç: 1px solid #e9ecef" />
            </Form.Item>
            <Form.Item label="ÂúÜËßí" name="borderRadius">
              <Input placeholder="Â¶Ç: 8px" />
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
          </>
        );

      case 'email-two-column':
        return (
          <>
            <Form.Item label="Â∑¶‰æßÂÜÖÂÆπ" name="leftContent">
              <TextArea rows={4} placeholder="ËæìÂÖ•Â∑¶‰æßÂÜÖÂÆπÔºåÊîØÊåÅHTML" />
            </Form.Item>
            <Form.Item label="Âè≥‰æßÂÜÖÂÆπ" name="rightContent">
              <TextArea rows={4} placeholder="ËæìÂÖ•Âè≥‰æßÂÜÖÂÆπÔºåÊîØÊåÅHTML" />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÂàóÈó¥Ë∑ù" name="columnGap">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
          </>
        );

      case 'email-three-column':
        return (
          <>
            <Form.Item label="Â∑¶‰æßÂÜÖÂÆπ" name="leftContent">
              <TextArea rows={3} placeholder="ËæìÂÖ•Â∑¶‰æßÂÜÖÂÆπÔºåÊîØÊåÅHTML" />
            </Form.Item>
            <Form.Item label="‰∏≠Èó¥ÂÜÖÂÆπ" name="centerContent">
              <TextArea rows={3} placeholder="ËæìÂÖ•‰∏≠Èó¥ÂÜÖÂÆπÔºåÊîØÊåÅHTML" />
            </Form.Item>
            <Form.Item label="Âè≥‰æßÂÜÖÂÆπ" name="rightContent">
              <TextArea rows={3} placeholder="ËæìÂÖ•Âè≥‰æßÂÜÖÂÆπÔºåÊîØÊåÅHTML" />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÂàóÈó¥Ë∑ù" name="columnGap">
              <Input placeholder="Â¶Ç: 15px" />
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
          </>
        );

      case 'email-social':
        return (
          <>
            <Form.Item label="FacebookÈìæÊé•" name="facebook">
              <Input placeholder="ËæìÂÖ•FacebookÈìæÊé•" />
            </Form.Item>
            <Form.Item label="TwitterÈìæÊé•" name="twitter">
              <Input placeholder="ËæìÂÖ•TwitterÈìæÊé•" />
            </Form.Item>
            <Form.Item label="InstagramÈìæÊé•" name="instagram">
              <Input placeholder="ËæìÂÖ•InstagramÈìæÊé•" />
            </Form.Item>
            <Form.Item label="LinkedInÈìæÊé•" name="linkedin">
              <Input placeholder="ËæìÂÖ•LinkedInÈìæÊé•" />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÂØπÈΩêÊñπÂºè" name="textAlign">
              <Select>
                <Option value="left">Â∑¶ÂØπÈΩê</Option>
                <Option value="center">Â±Ö‰∏≠</Option>
                <Option value="right">Âè≥ÂØπÈΩê</Option>
              </Select>
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
          </>
        );

      case 'email-footer':
        return (
          <>
            <Form.Item
              label="ËÑöÈÉ®ÂÜÖÂÆπ"
              name="content"
              rules={[{ required: true }]}
            >
              <TextArea rows={3} placeholder="ËæìÂÖ•ËÑöÈÉ®ÂÜÖÂÆπÔºåÊîØÊåÅHTML" />
            </Form.Item>
            <Form.Item label="ËÉåÊôØÈ¢úËâ≤" name="backgroundColor">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÊñáÂ≠óÈ¢úËâ≤" name="color">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="Â≠ó‰ΩìÂ§ßÂ∞è" name="fontSize">
              <Input placeholder="Â¶Ç: 12px" />
            </Form.Item>
            <Form.Item label="ÂØπÈΩêÊñπÂºè" name="textAlign">
              <Select>
                <Option value="left">Â∑¶ÂØπÈΩê</Option>
                <Option value="center">Â±Ö‰∏≠</Option>
                <Option value="right">Âè≥ÂØπÈΩê</Option>
              </Select>
            </Form.Item>
            <Form.Item label="ÂÜÖËæπË∑ù" name="padding">
              <Input placeholder="Â¶Ç: 20px" />
            </Form.Item>
          </>
        );

      case 'email-divider':
        return (
          <>
            <Form.Item label="ÂàÜÂâ≤Á∫øÈ¢úËâ≤" name="color">
              <ColorPicker showText />
            </Form.Item>
            <Form.Item label="ÂàÜÂâ≤Á∫øÈ´òÂ∫¶" name="height">
              <Input placeholder="Â¶Ç: 1px" />
            </Form.Item>
            <Form.Item label="Â§ñËæπË∑ù" name="margin">
              <Input placeholder="Â¶Ç: 20px 0" />
            </Form.Item>
            <Form.Item label="ÂÆΩÂ∫¶" name="width">
              <Input placeholder="Â¶Ç: 100%" />
            </Form.Item>
          </>
        );

      default:
        return (
          <div style={{ textAlign: 'center', color: '#999', padding: '20px' }}>
            ËØ•ÁªÑ‰ª∂ÊöÇÊó†Â±ûÊÄßÈÖçÁΩÆ
          </div>
        );
    }
  };

  return (
    <Card
      title={`Â±ûÊÄßÈÖçÁΩÆ - ${selectedComponent.name}`}
      style={{ height: '100%' }}
      bodyStyle={{ height: 'calc(100% - 57px)', overflow: 'auto' }}
    >
      <Form
        form={form}
        layout="vertical"
        onFinish={handleSave}
        style={{ height: '100%' }}
      >
        {renderPropertyFields()}

        <Divider />

        <Space style={{ width: '100%', justifyContent: 'flex-end' }}>
          <Button icon={<UndoOutlined />} onClick={handleReset}>
            ÈáçÁΩÆ
          </Button>
          <Button type="primary" icon={<SaveOutlined />} htmlType="submit">
            ‰øùÂ≠ò
          </Button>
        </Space>
      </Form>
    </Card>
  );
};
